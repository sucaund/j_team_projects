<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.hellong.GymOrderMapper">

	<!-- 포인트 사용 -->
	<select id="hsTotalListGymOrderDealCnt" resultType="int">
		SELECT count(*)
		FROM gym_order 
		WHERE m_number = #{m_number}
		AND refund_date IS NULL
	</select>
	
	<select id="hsListGymOrderDeal" parameterType="Member" resultType="GymOrder">
		SELECT *
		FROM
			(SELECT rownum rn, (a.g_name || ' ' || a.gs_s_detail || ' 구매') "pl_content",
					a.deal_date "pl_date", ('-' || a.use_point) "pl_point"
			 FROM
			     (SELECT g.g_name, gs.s_detail gs_s_detail, go.*
			      FROM gym g, g_s gs, gym_order go
			      WHERE g.g_id = gs.g_id
			   	  AND gs.g_id = go.g_id
			   	  AND gs.s_number = go.s_number
			   	  AND go.m_number = #{m_number}
			   	  AND go.refund_date IS NULL
			      ORDER BY go.refund_date DESC
			    ) a
			)
	</select>
	
	<select id="hslistGymOrderDealDate" parameterType="Member" resultType="String">
		SELECT deal_date
		FROM gym_order
		WHERE m_number = #{m_number}
		AND refund_date IS NULL
		ORDER BY deal_date DESC
	</select>
	
	<!-- 포인트 환불  -->
	<select id="hsTotalListGymOrderRefundCnt" parameterType="int" resultType="int">
		SELECT count(*)
		FROM gym_order
		WHERE m_number = #{m_number}
		AND refund_date IS NOT NULL
	</select>
	
	<select id="hsListGymOrderRefund" parameterType="Member" resultType="GymOrder">
		SELECT *
		FROM
			(SELECT rownum rn, (a.g_name || ' ' || a.gs_s_detail || ' 환불') "pl_content",
					a.refund_date "pl_date", ('+' || a.refund_point) "pl_point"
			 FROM
			     (SELECT g.g_name, gs.s_detail gs_s_detail, go.*
			      FROM gym g, g_s gs, gym_order go
			      WHERE g.g_id = gs.g_id
			   	  AND gs.g_id = go.g_id
			   	  AND gs.s_number = go.s_number
			   	  AND go.m_number = #{m_number}
			   	  AND go.refund_date IS NOT NULL
			      ORDER BY go.refund_date DESC
			    ) a
			)
	</select>
	
	<select id="hslistGymOrderRefundDate" parameterType="Member" resultType="String">
		SELECT refund_date
		FROM gym_order
		WHERE m_number = #{m_number}
		AND refund_date IS NOT NULL
		ORDER BY refund_date DESC
	</select>
	
	<!-- 헬스장 이용내역 조회 -->
	
	<!-- 헬스장 환불 -->
	
	<select id="hsListGymName" parameterType="int" resultType="GymOrder">
		SELECT DISTINCT g.g_name, g.g_id
		FROM gym g, gym_order go
		WHERE g.g_id = go.g_id
		AND go.m_number = #{m_number}
	</select>
	
	<select id="hsListGymSerivce" parameterType="map" resultType="GymOrder">
		SELECT go.*, (gs.s_name || ' - ' || gsd.s_detail) "rl_s_name"
		FROM g_s gs, g_s_detail gsd, gym_order go
		WHERE gs.g_id = gsd.g_id
		AND gs.g_id = go.g_id
		AND go.g_id = #{gymId}
		AND gs.s_number = gsd.s_number
		AND gsd.s_number = go.s_number
		AND gsd.s_detail = go.s_detail
		AND go.m_number = #{m_number}
	</select>
	
   <select id="hsRefundPrice" parameterType="map" resultType="GymOrder">
      SELECT ROUND(a.use_point*(a.refund_criteria/100), -1) "refund_point", (a.refund_criteria || '% 환불') "refund_criteria"
      FROM
          (SELECT go.*,
              CASE WHEN (to_date(sysdate) - to_date(gsd.s_startdate)) &lt;= 7 THEN '100'
                   WHEN ((to_date(gsd.s_enddate)- to_date(sysdate))/(to_date(gsd.s_enddate) - to_date(gsd.s_startdate))) &gt;=0.66 THEN '50'
                   WHEN ((to_date(gsd.s_enddate)- to_date(sysdate))/(to_date(gsd.s_enddate) - to_date(gsd.s_startdate))) BETWEEN 0.5 AND 0.66 THEN '30'
                   ELSE '0'
              END AS refund_criteria
          FROM gym_order go, g_s_detail gsd
          WHERE go.g_id = gsd.g_id
          AND go.s_number = gsd.s_number
          AND go.s_detail = gsd.s_detail
          AND go.s_number = 1
          AND go.s_detail = 1
          AND go.g_id = 1
          AND go.m_number = 1) a;
   </select>

</mapper>