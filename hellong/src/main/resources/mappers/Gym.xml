<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.hellong.GymMapper">
	<select id="gymTotal" resultType="int">
		SELECT Count(*) FROM gym 
	</select>
	<select id="jhGymListAll" parameterType="Gym" resultType="Gym">
		select*
		from
		(
			select rownum rn, a.*
			from
				(select*from gym order by g_id)a
		)
		where rn between #{start} and #{end}
		
	</select>
	
	<select id="jhGymListManage" parameterType="Gym" resultType="Gym">
		select*
		from gym
		where m_number = #{m_number}
		and common_mcd = 20
		and g_isdeleted = 0
	
	</select>
	
	
	<select id="jhGymListManager" parameterType="Gym" resultType="Gym">
		select*
		from gym
		where m_number = #{m_number}
		and common_mcd = 20
		and g_isdeleted = 0
	</select>
	
	<select id="jhcreateGymPost" parameterType="int" resultType="Gym">
		select*
		from gym
		where g_id = #{g_id}
	</select>
	
		<select id="gymIdTrainer" parameterType="int" resultType="int">
		select g_id
		from gym
		where g_id = #{g_id}
	</select>
	
	<select id="getAllGym" resultType="Gym">
		SELECT*
		FROM GYM WHERE G_ISDELETED = 0
	</select>
	
	<select id="getGym" parameterType="int" resultType="Gym">
		SELECT*
		FROM GYM WHERE G_ID = #{g_id}
	</select>
	
	<select id="dySearchGyms" parameterType="Gym" resultType="Gym">
		SELECT
		g_name, g_address, g_tel
		FROM gym
		WHERE g_name LIKE '%' || #{totKeyword} || '%'
		OR g_address LIKE '%' || #{totKeyword} || '%'
	</select>
	
	<insert id="shregisterGym" parameterType="Gym">
		INSERT INTO GYM (G_ID,    M_NUMBER,   G_NAME,    G_ADDRESS,   G_TEL,    G_COMPANYNUMBER,  G_DOCUMENT,G_REGDATE,COMMON_BCD,COMMON_MCD,G_ISDELETED)
		VALUES (G_ID_SEQ.NEXTVAL, #{m_number},#{g_name}, #{g_address},#{g_tel}, #{g_companynumber},#{g_document},SYSDATE,500,10,0)
	</insert>
	
	<update id="deleteGym" parameterType="int">
	    UPDATE Gym
	    SET G_ISDELETED = 1
	    WHERE G_ID =#{g_id}
	</update>

	<update id="OpenGym">
	    UPDATE Gym
	    SET COMMON_MCD = #{common_mcd}
	    WHERE G_ID = #{g_id}
	</update>
	
	  <select id="getNewGym" resultType="Gym">
		SELECT * FROM (
		   SELECT g.*
		   FROM GYM g
		   WHERE g.G_ISDELETED = 0
		   ORDER BY g.G_REGDATE DESC
		)
		WHERE ROWNUM = 1
    </select>

    <select id="getCheapGym" resultType="Gym">
		SELECT * FROM (
		    SELECT g.*
		    FROM GYM g
		    INNER JOIN (
		        SELECT G_ID, MIN(S_PRICE) AS MinPrice
		        FROM G_S
		        GROUP BY G_ID
		    ) gs ON g.G_ID = gs.G_ID
		    INNER JOIN G_S gsd ON g.G_ID = gsd.G_ID AND gs.MinPrice = gsd.S_PRICE
		    WHERE g.G_ISDELETED = 0
		    ORDER BY gsd.S_PRICE ASC
		) WHERE ROWNUM = 1

    </select>

 <select id="getManyGym" resultType="Gym"> 
 		SELECT * FROM (
   			 SELECT d.G_ID, g.G_NAME, g.G_ADDRESS, COUNT(DISTINCT o.M_NUMBER) AS MEMBER_COUNT
			    FROM GYM_ORDER o
			    INNER JOIN G_S_DETAIL d ON o.S_NUMBER = d.S_NUMBER
			    INNER JOIN MEMBER m ON o.M_NUMBER = m.M_NUMBER
			    INNER JOIN GYM g ON d.G_ID = g.G_ID
			    WHERE g.G_ISDELETED = 0
			    GROUP BY d.G_ID, g.G_NAME, g.G_ADDRESS
			    ORDER BY COUNT(DISTINCT o.M_NUMBER) DESC
			) WHERE ROWNUM = 1
	</select>

	<select id="getStarGym" resultType="Gym"> 
		SELECT * FROM (
   			 SELECT g.G_ID, g.G_NAME, g.G_ADDRESS, AVG(gr.REVIEW_STAR) AS AVG_STAR
    			FROM GYM_REVIEW gr
    			INNER JOIN GYM g ON gr.G_ID = g.G_ID
    			WHERE g.G_ISDELETED = 0
    			GROUP BY g.G_ID, g.G_NAME, g.G_ADDRESS
    			ORDER BY AVG_STAR DESC
		) WHERE ROWNUM = 1
	</select>


	
</mapper>